from aiogram import types
import config as cfg
from cryptography.fernet import Fernet

coder = Fernet(cfg.key)


def code_link(text):
    return coder.encrypt(text).decode()


def get_auctions_buttons(auct_mass, category):
    res_markup = types.InlineKeyboardMarkup(row_width=3)
    isThereAuctions = False
    for auct in auct_mass:
        if auct[8] == category and not auct[6] == "check":
            isThereAuctions = True
            res_markup.insert(
                types.InlineKeyboardButton(
                    text=f"{auct[5]} | {auct[4]}", callback_data=f"detail {auct[3]}"
                )
            )
    res_markup.add(types.InlineKeyboardButton("–°–∫—Ä—ã—Ç—å", callback_data="hide"))
    if not isThereAuctions:
        return None
    return res_markup


menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(
    types.KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ ‚öñÔ∏è"),
    types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω üíé"),
    types.KeyboardButton(text="–û –Ω–∞—Åüåü"),
    types.KeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–≤–æ–µ–º—É –∞—É–∫—Ü–∏–æ–Ω—É üîì"),
)


admin_panel = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton("–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ", callback_data="check_auctions"),
    types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data="admin_delete"),
    types.InlineKeyboardButton("–ë–∞–Ω-—Å–∏—Å—Ç–µ–º–∞üîï", callback_data="bor"),
    types.InlineKeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞üí¨", callback_data="newsletter"),
    types.InlineKeyboardButton("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞üìù", callback_data="edit_balance"),
    types.InlineKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä", callback_data="stats"),
    types.InlineKeyboardButton("‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="hide"),
)


garant_check = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–∞—Ä–∞–Ω—Ç –±–æ—Ç–∞üíé",
        url="https://t.me/pradagarant_bot",
    ),
    types.InlineKeyboardButton(text="–Ø –Ω–∞–∂–∞–ª", callback_data="check_member_garant"),
)

bor = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton("–ó–∞–±–∞–Ω–∏—Ç—åüîï", callback_data="ban"),
    types.InlineKeyboardButton("–†–∞–∑–±–∞–Ω–∏—Ç—åüîî", callback_data="unban"),
)

o_nas = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton(
        text="üßë‚Äçüíª–ö–†–£–ì–õ–û–°–£–¢–û–ß–ù–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê", url="https://t.me/pradaauction_sup"
    ),
    types.InlineKeyboardButton(
        text="üì∞–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–ë–ù–û–í–õ–ï–ù–ò–Ø–• –ë–û–¢–û–í",
        url="https://t.me/+gbEsSZAUQTU4OWZi",
    ),
    types.InlineKeyboardButton(
        text="üåé–í–°–ï –ù–ê–®–ò –ü–†–û–ï–ö–¢–´", url="https://t.me/PRADAEMPlRE"
    ),
    types.InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="close"),
)

hide = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="hide")
)


channel_url = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=cfg.channel_url),
    types.InlineKeyboardButton("–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_member"),
)

sort_choose = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True).add(
    types.KeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏–µüìà"),
    types.KeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤—ã–µüìâ"),
    types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
)
categor = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True).add(
    types.KeyboardButton(text="–ú–∞–Ω—É–∞–ª—ãüìì"),
    types.KeyboardButton(text="–¢–µ–≥–∏üìß"),
    types.KeyboardButton(text="–î–µ—Ñüõ°"),
    types.KeyboardButton(text="–£—Å–ª—É–≥–∏ü§ù"),
    types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ãüóÉ"),
    types.KeyboardButton(text="–°–æ—Ñ—Çüñ•"),
    types.KeyboardButton(text="–ë–æ—Ç—ãü§ñ"),
    types.KeyboardButton(text="–°–∞–π—Ç—ãüåê"),
    types.KeyboardButton(text="–î—Ä—É–≥–æ–µ‚öôÔ∏è"),
    types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
)
owner_actions = types.InlineKeyboardMarkup(row_width=1).add(
    types.InlineKeyboardButton(
        text="–£–¥–∞–ª–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω üóë", callback_data="remove_auction"
    ),
    types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É üí∞", callback_data="start_cost"
    ),
    types.InlineKeyboardButton(
        text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç‚öôÔ∏è", callback_data="auto_start"
    ),
    types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ωüõé", callback_data="start_auction"),
)

cancel_admin_del = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel_admin_del")
)

member_actions = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton(text="–ü–æ–∫–∏–Ω—É—Ç—å –∞—É–∫—Ü–∏–æ–Ω‚ùå", callback_data="leave_auction"),
    types.InlineKeyboardButton(text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—Ç–∞–≤–∫—Éüîä", callback_data="offer_rate"),
)

close_info_message = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="close")
)

get_auction_info = types.ReplyKeyboardMarkup(resize_keyboard=True).add(
    types.KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—É–∫—Ü–∏–æ–Ω–µüìú", callback_data="info_auction")
)

del_auction = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="move"),
    # types.InlineKeyboardButton(
    #     text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–∞—Ä–∞–Ω—Ç –±–æ—Ç–∞üíé", url="https://t.me/pradagarant_bot"
    # ),
)


def accept_offer(offer_id):
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(
            text="–ü—Ä–∏—è–Ω—Ç—å —Å—Ç–∞–≤–∫—É‚úÖ", callback_data=f"accept_offer{offer_id}"
        )
    )


def get_auction_offer(author_id):
    return types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(
            text="–í—Å—Ç—É–ø–∏—Ç—å –≤ –∞—É–∫—Ü–∏–æ–Ω‚úÖ", callback_data=f"enter_auction{author_id}"
        ),
        types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_offer_list"),
    )


def get_admin_solution_markup(owner):
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"acceptproduct_{owner}"),
        types.InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"denyproduct_{owner}"),
    )


# offer –ü—Ä–æ–¥–∞–≤–µ—Ü –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –°—É–º–º–∞
