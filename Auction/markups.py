from aiogram import types
import config as cfg
from cryptography.fernet import Fernet

coder = Fernet(cfg.key)


def code_link(text):
    return coder.encrypt(text).decode()


def get_auctions_buttons(auct_mass, category):
    res_markup = types.InlineKeyboardMarkup(row_width=3)
    isThereAuctions = False
    for auct in auct_mass:
        if auct[8] == category:
            isThereAuctions = True
            res_markup.insert(
                types.InlineKeyboardButton(
                    text=f"{auct[5]} | {auct[4]}", callback_data=f"detail {auct[3]}"
                )
            )
    if not isThereAuctions:
        return None
    return res_markup


menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
    types.KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ ‚öñÔ∏è"),
    types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω üíé"),
    types.KeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–≤–æ–µ–º—É –∞—É–∫—Ü–∏–æ–Ω—É üîì"),
)

action_choose = types.InlineKeyboardMarkup(row_width=2)
action_choose.add(
    types.InlineKeyboardButton(
        text="–°–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ ‚öñÔ∏è", callback_data="get_auctions"
    ),
    types.InlineKeyboardButton(
        text="–°–æ–∑–¥–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω üíé", callback_data="create_auction"
    ),
    types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–≤–æ–µ–º—É –∞—É–∫—Ü–∏–æ–Ω—É üîì", callback_data="my_auction"
    ),
)

sort_choose = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏–µ", callback_data="sort_increase"),
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤—ã–µ", callback_data="sort_decrease"),
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ", callback_data="sort_no"),
)
categor = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True).add(
    types.KeyboardButton(text="–ú–∞–Ω—É–∞–ª—ãüìì"),
    types.KeyboardButton(text="–¢–µ–≥–∏üìß"),
    types.KeyboardButton(text="–î–µ—Ñüõ°"),
    types.KeyboardButton(text="–£—Å–ª—É–≥–∏ü§ù"),
    types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ãüóÉ"),
    types.KeyboardButton(text="–°–æ—Ñ—Çüñ•"),
    types.KeyboardButton(text="–ë–æ—Ç—ãü§ñ"),
    types.KeyboardButton(text="–°–∞–π—Ç—ãüåê"),
    types.KeyboardButton(text="PRADAüèÜ"),
    types.KeyboardButton(text="–î—Ä—É–≥–æ–µ‚öôÔ∏è"),
    types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
)
owner_actions = types.InlineKeyboardMarkup(row_width=1)
owner_actions.add(
    types.InlineKeyboardButton(
        text="–£–¥–∞–ª–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω üóë", callback_data="remove_auction"
    ),
    types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É üí∞", callback_data="start_cost"
    ),
    types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data="start_auction"),
)

member_actions = types.InlineKeyboardMarkup(row_width=2)
member_actions.add(
    types.InlineKeyboardButton(text="–ü–æ–∫–∏–Ω—É—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data="leave_auction"),
    types.InlineKeyboardButton(text="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—Ç–∞–≤–∫—É", callback_data="offer_rate"),
)


def accept_offer(offer_id):
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(
            text="–ü—Ä–∏—è–Ω—Ç—å —Å—Ç–∞–≤–∫—É", callback_data=f"accept_offer{offer_id}"
        )
    )


del_auction = types.InlineKeyboardMarkup().add(
    types.InlineKeyboardButton(
        text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–∞—Ä–∞–Ω—Ç –±–æ—Ç–∞ ‚û°Ô∏è", url="https://t.me/pradagarantbot"
    ),
)


def get_auction_offer(author_id):
    return types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(
            text="–í—Å—Ç—É–ø–∏—Ç—å –≤ –∞—É–∫—Ü–∏–æ–Ω", callback_data=f"enter_auction{author_id}"
        ),
        types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_offer_list"),
    )


# offer –ü—Ä–æ–¥–∞–≤–µ—Ü –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –°—É–º–º–∞
