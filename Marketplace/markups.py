import config as cfg
from aiogram import types
from cryptography.fernet import Fernet

coder = Fernet(cfg.key)


def code_link(text):
    return coder.encrypt(text).decode()


menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
    types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),
    types.KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä"),
    types.KeyboardButton(text="–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã"),
)


categor = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True).add(
    types.KeyboardButton(text="–ú–∞–Ω—É–∞–ª—ãüìì"),
    types.KeyboardButton(text="–¢–µ–≥–∏üìß"),
    types.KeyboardButton(text="–î–µ—Ñüõ°"),
    types.KeyboardButton(text="–£—Å–ª—É–≥–∏ü§ù"),
    types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ãüóÉ"),
    types.KeyboardButton(text="–°–æ—Ñ—Çüñ•"),
    types.KeyboardButton(text="–ë–æ—Ç—ãü§ñ"),
    types.KeyboardButton(text="–°–∞–π—Ç—ãüåê"),
    types.KeyboardButton(text="PRADAüèÜ"),
    types.KeyboardButton(text="–î—Ä—É–≥–æ–µ‚öôÔ∏è"),
    types.KeyboardButton(text="–ù–∞–∑–∞–¥"),
)

buy_choose = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton("–î–∞‚úîÔ∏è", callback_data="accept"),
    types.InlineKeyboardButton("–ù–µ—Ç‚ùå", callback_data="deny"),
)

sort_choose = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏–µ", callback_data="sort_increase"),
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤—ã–µ", callback_data="sort_decrease"),
    types.InlineKeyboardButton(text="–°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ", callback_data="sort_no"),
)


def get_offer_buy_button(offer_str):
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(text="–ö—É–ø–∏—Ç—åüõç", callback_data=f"buy_{offer_str}")
    )


def get_offer_del_button(offer_str):
    return types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—åüóë", callback_data=f"del_{offer_str}")
    )


# category_selection_menu = types.InlineKeyboardMarkup(row_width=2)
# for categories in cfg.product_list:
#     category_selection_button = types.InlineKeyboardButton(
#         text=categories["name"], callback_data=categories["name"]
#     )
#     category_selection_menu.insert(category_selection_button)


# def getProductsMarkup(category):
#     if category == "Back":
#         return category_selection_menu
#     products_selection_markup = types.InlineKeyboardMarkup(row_width=1)
#     for i in cfg.product_list:
#         if i["name"] == category:
#             for j in i["items"]:
#                 products_selection_button = types.InlineKeyboardButton(
#                     text=j, callback_data=j
#                 )
#                 products_selection_markup.insert(products_selection_button)
#     products_selection_markup.insert(
#         types.InlineKeyboardButton(text="Back", callback_data="Back")
#     )
#     return products_selection_markup
#     products_selection_markup.insert(
#         types.InlineKeyboardButton(text="Nothing", callback_data="adad")
#     )
#     return products_selection_markup
