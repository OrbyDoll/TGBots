from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

import config as cfg
import markups as nav


class ClientState(StatesGroup):
    START = State()
    CREATEAUCTION = State()
    AUCTIONOWNER = State()
    OFFERRATE = State()
    CHANGESTARTCOST = State()


storage = MemoryStorage()
bot = Bot(token=cfg.TOKEN)
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    if message.chat.type == "private":
        await bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –≤–∞–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—á—Ç–µ–Ω–∏—è –º–∞–Ω—É–∞–ª–∞üìÉ",
            reply_markup=nav.categor_choose_forward,
        )


@dp.callback_query_handler()
async def call_handler(call: types.CallbackQuery):
    await bot.answer_callback_query(callback_query_id=call.id)
    chatid = call.message.chat.id
    if call.data == "forward":
        await bot.edit_message_reply_markup(
            chatid,
            call.message.message_id,
            call.message.message_id,
            nav.categor_choose_back,
        )
    elif call.data == "back":
        await bot.edit_message_reply_markup(
            chatid,
            call.message.message_id,
            call.message.message_id,
            nav.categor_choose_forward,
        )
    elif call.data == "shantazh":
        await bot.send_message(chatid, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–∞–Ω—É–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚õîÔ∏è. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å—Ç–∞–ª—å–Ω—ã–º –º–∞–Ω—É–∞–ª–∞–º –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='delete')
        ), )
    elif call.data == 'delete':
        await bot.delete_message(chatid, call.message.message_id)
    elif call.data == "close":
        await bot.delete_message(chatid, call.message.message_id)
        await bot.delete_message(chatid, call.message.message_id - 1)
    else:
        file_name = call.data
        open_file = open(f"files/{file_name}.txt", "rb")
        if file_name == '–ê–£–ö–¶–ò–û–ù BY PRADA':
            await bot.send_message(chatid, "üí∏–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç –∏ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø–æ –¥–∞–Ω–Ω–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –Ω–∞–ø–∏—à–∏ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @Imperator_Kuzco.\n\n‚ö°Ô∏è–í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç –∏ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ. –ó–∞—Ä—è–¥—É!")
        await bot.send_document(
            chatid,
            open_file,
            reply_markup=types.InlineKeyboardMarkup().add(
                types.InlineKeyboardButton(text="–°–∫—Ä—ã—Ç—å", callback_data="delete")
            ),
        )


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
