from telebot import types
import telebot
from config import (
    TOKEN,
    admin,
    chat_bota,
    instruction,
    nicknameadm,
    procent,
    admin2,
    instruction,
    chat_bota,
    crypto_token,
    crypto_test_token,
    required_chat_id,
)

from var import error, canel_operation, disable_keyboard, enable_keyboard
import kboard as kb
import functions as func
import requests
import json
import sqlite3
import time

api_link = "https://testnet-pay.crypt.bot/api/"
header = {"Crypto-Pay-API-Token": crypto_test_token}

coin_dict = {"coin": "None", "amount": 0}
balance_dict = {}
bot = telebot.TeleBot(TOKEN)
bot_username = bot.get_me().username


def checkMember(userid, chatid):
    chat_member = bot.get_chat_member(chatid, userid)
    if chat_member.status == "left":
        return False
    return True


def get_offer_from_string(
    seller_nick_raw, customer_nick_raw, offer_type, offer_link_split
):
    seller_nick = (
        seller_nick_raw if offer_type == "seller-customer" else customer_nick_raw
    )
    customer_nick = (
        customer_nick_raw if offer_type == "seller-customer" else seller_nick_raw
    )
    seller_id = (
        func.get_id_from_name(seller_nick)
        if offer_type == "seller-customer"
        else seller_nick
    )
    customer_id = (
        func.get_id_from_name(customer_nick)
        if offer_type == "seller-customer"
        else customer_nick
    )
    offer_price = offer_link_split[3]
    check_user = func.search(customer_nick)
    print(seller_id, customer_id)
    if check_user == None:
        bot.send_message(
            seller_id,
            text="‚õîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ–Ω —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º!",
        )
    elif seller_id == customer_id:
        bot.send_message(
            seller_id,
            text="–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É —Å–∞–º–æ–º—É —Å–µ–±–µ",
        )
    else:
        check_deal = func.check_deal(func.get_nick_from_id(customer_nick))
        if check_deal == None:
            try:
                func.deal(seller_id, customer_id)
                func.edit_price(offer_price, seller_id)
                bot.send_message(
                    chat_id=seller_id,
                    text="‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!",
                    reply_markup=kb.canel_offer_seller,
                )
                info = func.info_deal_seller(seller_id)
                info1 = func.profile(seller_id)
                bot.send_message(
                    info[0],
                    text="‚úÖ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ!",
                    reply_markup=types.ReplyKeyboardRemove(),
                )
                bot.send_message(
                    info[0],
                    "‚ùï id - <b><code>{id}</code></b>\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!".format(
                        id=info1[0], offers=info1[1]
                    ),
                    reply_markup=kb.choise,
                    parse_mode="HTML",
                )
            except Exception as e:
                print(e)
                bot.send_message(seller_id, text=error)
        else:
            bot.send_message(
                seller_id,
                text="‚õîÔ∏è –ß–µ–ª–æ–≤–µ–∫ —Å–µ–π—á–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–¥–µ–ª–∫—É, –∏ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Ç–æ—Ä—É—é.",
            )
            bot.send_message(
                info[0],
                "‚õîÔ∏è –° –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É, –æ–¥–Ω–∞–∫–æ —Å–∏—Å—Ç–µ–º–∞ –µ—ë –æ—Ç–∫–ª–æ–Ω–∏–ª–∞, –≤–µ–¥—å –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç!",
            )


# –ó–∞–ø–∏—Å—å –≤ –ë–∞–∑—É –î–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=["start"])
def start(message: types.Message):
    # if not checkMember(message.chat.id, required_chat_id):
    #     bot.send_message(message.chat.id,f'–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!',reply_markup=kb.channel_url)
    #     return
    if not message.chat.type == "private":
        return
    chat_id = message.chat.id
    username = message.from_user.username
    if message.from_user.username == None:
        bot.send_message(
            chat_id, "‚õîÔ∏è –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º!"
        )
    else:
        func.first_join(user_id=chat_id, username=username)
        bot.send_message(
            chat_id,
            "‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {}!".format(message.from_user.first_name),
            reply_markup=kb.menu,
        )


@bot.message_handler(commands=["getBalance"])
def getBalance(message: types.Message):
    # if not checkMember(message.chat.id, required_chat_id):
    #     bot.send_message(message.chat.id,f'–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!',reply_markup=kb.channel_url)
    #     return
    if not message.chat.type == "private":
        return
    if message.from_user.id == admin:
        res = requests.get(api_link + "getBalance", headers=header).json()["result"]
        bot.send_message(message.chat.id, res[0]["available"])


# –í—ã–∑–æ–≤ –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª–∏
@bot.message_handler(commands=["admin"])
def start(message: types.Message):
    # if not checkMember(message.chat.id, required_chat_id):
    #     bot.send_message(message.chat.id,f'–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!',reply_markup=kb.channel_url)
    #     return
    if not message.chat.type == "private":
        return
    if message.chat.id == admin or message.chat.id == admin2:
        bot.send_message(
            message.chat.id,
            "‚úÖ {}, –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!".format(message.from_user.first_name),
            reply_markup=kb.admin,
        )


# –ö–æ–º–∞–Ω–¥—ã
@bot.message_handler(content_types=["text"])
def send_text(message):
    if not message.chat.type == "private":
        return
    # if not checkMember(message.chat.id, required_chat_id):
    #     bot.send_message(message.chat.id,f'–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!',reply_markup=kb.channel_url)
    #     return
    chat_id = message.chat.id
    username = message.from_user.username
    try:
        info = func.check_ban(user_id=chat_id)
        if info[0] == "1":
            bot.send_message(chat_id, "‚õîÔ∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!")
        else:
            info = func.search_block(chat_id)
            if info != None:
                bot.send_message(
                    chat_id,
                    "‚õîÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º, –ø–æ–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–¥–µ–ª–∫—É!",
                )
            else:
                if message.text.lower() == "üë§ –ø—Ä–æ—Ñ–∏–ª—å":
                    info = func.profile(user_id=chat_id)
                    bot.send_message(
                        chat_id,
                        "üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n‚ùï –í–∞—à id - <b><code>{id}</code></b>\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - {balance} USDT\n".format(
                            id=info[0], offers=info[1], balance=info[2]
                        ),
                        reply_markup=kb.profile,
                        parse_mode="HTML",
                    )
                elif message.text.lower() == "üîí –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É":
                    msg = bot.send_message(
                        chat_id, "–í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã...", reply_markup=kb.choise_offer
                    )
                elif message.text.lower() == "‚≠êÔ∏è –æ –Ω–∞—Å":
                    bot.send_message(
                        chat_id,
                        f"–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @{nicknameadm}\n–ù–∞—à —á–∞—Ç: {chat_bota}\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: {instruction}\n\n–û–±—â–µ–µ —á–∏—Å–ª–æ —Å–¥–µ–ª–æ–∫: {func.getOffersNumber()}\n–û–±—â–∞—è —Å—É–º–º–∞ –≤—Å–µ—Ö —Å–¥–µ–ª–æ–∫: {func.getOffersSumm()} USDT",
                    )
                elif message.text.lower() == "üíµ –ø—Ä–æ—à–µ–¥—à–∏–µ —Å–¥–µ–ª–∫–∏":
                    bot.send_message(
                        chat_id,
                        "–í—ã–≤–µ—Å—Ç–∏ –≤–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≥–¥–µ –≤—ã...",
                        reply_markup=kb.cors,
                    )
                else:
                    try:
                        if func.decode_link(message.text).startswith("offer"):
                            offer_link_split = func.decode_link(message.text).split()
                            seller_nick = offer_link_split[1]
                            customer_nick = offer_link_split[2]
                            get_offer_from_string(
                                seller_nick_raw=seller_nick,
                                customer_nick_raw=customer_nick,
                                offer_type=offer_link_split[4],
                                offer_link_split=offer_link_split,
                            )
                    except Exception as e:
                        print(e, " decoder error")
                        bot.send_message(chat_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
    except Exception as e:
        print(e, "1")
        bot.send_message(chat_id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ")
        func.first_join(user_id=chat_id, username=username)


@bot.callback_query_handler(func=lambda call: True)
def handler_call(call: types.CallbackQuery):
    chat_id = call.message.chat.id
    message_id = call.message.message_id
    if call.data == "output":
        msg = bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ USDT! –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏")
        bot.register_next_step_handler(msg, output)
    elif call.data == "seller":
        info = func.last_offers_seller(chat_id)
        if len(info) > 0:
            bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=info)
        elif len(info) == 0:
            bot.edit_message_text(
                chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!"
            )
            bot.edit_message_reply_markup(
                chat_id=chat_id, message_id=message_id, reply_markup=kb.go_back
            )

    elif call.data == "customer":
        info = func.last_offers_customer(chat_id)
        if len(info) > 0:
            bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=info)
        elif len(info) == 0:
            bot.edit_message_text(
                chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!"
            )
            bot.edit_message_reply_markup(
                chat_id=chat_id, message_id=message_id, reply_markup=kb.go_back
            )

    elif call.data == "menu":
        bot.edit_message_text(
            chat_id=call.message.chat.id, message_id=message_id, text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        )

    elif call.data == "bor":
        bot.send_message(chat_id, text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=kb.bor)

    elif call.data == "unban":
        msg = bot.send_message(
            chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, unban1)

    elif call.data == "ban":
        msg = bot.send_message(
            chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, ban1)

    elif call.data == "edit_balance":
        msg = bot.send_message(
            chat_id=chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–Ω—Å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, give_balance1)

    elif call.data == "input":
        msg = bot.send_message(
            chat_id,
            "–í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞—à –±–æ—Ç –ø—Ä–∏–Ω–∏–º–µ—Ç –æ–ø–ª–∞—Ç—É —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é USDT! –ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.",
        )
        bot.register_next_step_handler(msg, getAmount)
    elif call.data == "check_payment":
        invoices = requests.get(api_link + "getInvoices", headers=header).json()
        if invoices["result"]["items"][0]["status"] == "paid":
            bot.delete_message(chat_id=chat_id, message_id=message_id)
            bot.send_message(text="–£—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ!", chat_id=chat_id)
            func.input(chat_id, invoices["result"]["items"][0]["amount"])
        else:
            bot.send_message(chat_id, "–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    elif call.data == "canel_payment":
        func.canel_payment(user_id=chat_id)
        bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=f"–ú–µ–Ω—é")
        bot.send_message(chat_id, text="–í–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã", reply_markup=kb.menu)

    elif call.data == "message":
        msg = bot.send_message(
            chat_id=chat_id,
            text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, message1)

    elif call.data == "seller_offer":
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text='–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ë–µ–∑ @), —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, search_seller)

    elif call.data == "customer_offer":
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text='–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ë–µ–∑ @), —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, search_customer)

    elif call.data == "proposal_customer":
        try:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!",
                reply_markup=kb.canel_offer_customer,
            )
            info = func.info_deal_customer(chat_id)
            info1 = func.profile(chat_id)
            bot.send_message(
                info[0],
                text="‚úÖ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ!",
                reply_markup=types.ReplyKeyboardRemove(),
            )
            bot.send_message(
                info[0],
                "‚ùï id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nick}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –ø—Ä–æ–¥–∞–≤–µ—Ü!".format(
                    id=info1[0], offers=info1[1], nick=info1[4]
                ),
                reply_markup=kb.choise_seller,
                parse_mode="HTML",
            )
        except Exception as e:
            print(e)
            bot.send_message(chat_id, text=error)

    elif call.data == "proposal_seller":
        try:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!",
                reply_markup=kb.canel_offer_seller,
            )
            info = func.info_deal_seller(chat_id)
            info1 = func.profile(chat_id)
            bot.send_message(
                info[0],
                text="‚úÖ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ!",
                reply_markup=types.ReplyKeyboardRemove(),
            )
            bot.send_message(
                info[0],
                "‚ùï id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nick}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!".format(
                    id=info1[0], offers=info1[1], nick=info1[4]
                ),
                reply_markup=kb.choise,
                parse_mode="HTML",
            )
        except Exception as e:
            print(e)
            bot.send_message(chat_id, text=error)

    elif call.data == "delete_customer":
        try:
            info = func.info_offers_customer(chat_id)
            if info[4] == "dont_open":
                func.delete_customer(chat_id)
                bot.edit_message_text(
                    chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
                bot.send_message(chat_id, text=enable_keyboard, reply_markup=kb.menu)
                bot.send_message(
                    info[0],
                    text="üåß –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –∏–ª–∏ —Å –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –µ—ë –ø—Ä–æ–≤–µ—Å—Ç–∏, –Ω–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏.",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(
                    chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "delete_seller":
        try:
            info = func.info_offers_seller(chat_id)
            if info[4] == "dont_open":
                func.delete_seller(chat_id)
                bot.edit_message_text(
                    chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
                bot.send_message(chat_id, text=enable_keyboard, reply_markup=kb.menu)
                bot.send_message(
                    info[1],
                    text="üåß –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –∏–ª–∏ —Å –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –µ—ë –ø—Ä–æ–≤–µ—Å—Ç–∏, –Ω–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏.",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(
                    chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "statistics":
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=func.stats(),
            reply_markup=kb.admin,
        )

    elif call.data == "accept_customer":
        try:
            func.accept_customer(chat_id)
            info = func.info_offers_customer(chat_id)
            info_c = func.profile(info[1])
            info_s = func.profile(info[0])
            status = info[4]
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{info[3]}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {info_c[0]}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {info_s[0]}\n\nüí≥ {'–°—É–º–º–∞ - –ù–µ —É–∫–∞–∑–∞–Ω–∞' if info[2] == None else f'{info[2]} USDT'}\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}",
                reply_markup=kb.customer_panel,
            )
            bot.send_message(
                info_s[0],
                text=f"üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{info[3]}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {info_c[0]}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {info_s[0]}\n\nüí≥ {'–°—É–º–º–∞ - –ù–µ —É–∫–∞–∑–∞–Ω–∞' if info[2] == None else f'{info[2]} USDT'}\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}",
                reply_markup=kb.seller_panel,
            )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "accept_seller":
        try:
            func.accept_seller(chat_id)
            info = func.info_offers_seller(chat_id)
            info_c = func.profile(info[1])
            info_s = func.profile(info[0])
            sum_offer = info[2]
            status = info[4]
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{info[3]}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {info_c[0]}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {info_s[0]}\n\nüí≥ {'–°—É–º–º–∞ - –ù–µ —É–∫–∞–∑–∞–Ω–∞' if info[2] == None else f'{info[2]} USDT'}\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}",
                reply_markup=kb.seller_panel,
            )
            bot.send_message(
                info_c[0],
                text=f"üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{info[3]}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {info_c[0]}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {info_s[0]}\n\nüí≥ {'–°—É–º–º–∞ - –ù–µ —É–∫–∞–∑–∞–Ω–∞' if info[2] == None else f'{info[2]} USDT'}\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}",
                reply_markup=kb.customer_panel,
            )
        except Exception as e:
            print(e, " accept_seller")
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "input_panel":
        try:
            info = func.profile(chat_id)
            offer = func.info_offers_customer(chat_id)
            if offer[2] == None:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚õîÔ∏è –ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ —É–∫–∞–∑–∞–ª —Å—É–º–º—É!",
                )
            else:
                if offer[4] == "success":
                    bot.answer_callback_query(
                        callback_query_id=call.id,
                        show_alert=True,
                        text="–í—ã —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ–≤–∞—Ä, –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑–∞–Ω –≤–∞–º –µ–≥–æ –ø–µ—Ä–µ–¥–∞—Ç—å. –ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä, –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–ø–æ—Ä.",
                    )
                else:
                    if float(info[2]) < float(offer[2]):
                        bot.send_message(
                            chat_id,
                            text="üìâ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å!\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - {user} USDT\nüí≥ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –±–∞–ª–∞–Ω—Å - {offer} USDT\n\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É!".format(
                                user=info[2], offer=offer[2]
                            ),
                        )
                    else:
                        bal = float(info[2]) - float(offer[2])
                        func.success(chat_id, bal)
                        info = func.info_offers_customer(chat_id)
                        bot.send_message(
                            info[0],
                            text="‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–ª–∞—Ç–∏–ª —Ç–æ–≤–∞—Ä! \n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä.",
                        )
                        bot.send_message(
                            info[1],
                            text="‚úÖ –¢–æ–≤–∞—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞. –ï—Å–ª–∏ —Ç–æ—Ç –Ω–µ –≤–∞–ª–∏–¥, –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –∫–∏–Ω—É–ª –≤ –ß–°, –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–ø–æ—Ä.",
                        )
        except:
            bot.send_message(chat_id, text=error)

    elif call.data == "price":
        try:
            info = func.info_offers_seller(chat_id)
            if info[2] == None:
                msg = bot.send_message(
                    chat_id,
                    text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç–æ–≤–∞—Ä–∞. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
                )
                bot.register_next_step_handler(msg, price)
            else:
                bot.send_message(
                    chat_id,
                    text="–í—ã —É–∂–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É —Ç–æ–≤–∞—Ä–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –µ—ë —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å!",
                )
        except Exception as e:
            print(e)
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "canel_open":
        bot.send_message(
            chat_id,
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É?",
            reply_markup=kb.choise_canel,
        )

    elif call.data == "No_canel":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "Yes_canel":
        try:
            info = func.info_offers_customer(chat_id)
            if info[4] == "open":
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü—É",
                )
                bot.send_message(
                    info[0],
                    text="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É.",
                    reply_markup=kb.choise_canel_seller2,
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "Yes_canel_seller":
        try:
            info = func.info_offers_seller(chat_id)
            if info[4] == "open":
                func.yes_canel_seller2(chat_id)
                bot.send_message(
                    info[0], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=kb.menu
                )
                bot.send_message(
                    info[1], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=kb.menu
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "canel_open_seller":
        bot.send_message(
            chat_id,
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É?",
            reply_markup=kb.choise_canel_seller,
        )

    elif call.data == "Yes_canel_seller1":
        try:
            info = func.info_offers_seller(chat_id)
            if info[4] == "open":
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—é",
                )
                bot.send_message(
                    info[1],
                    text="–ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É.",
                    reply_markup=kb.choise_canel_customer,
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "No_canel_seller1":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "No_canel_seller":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "Yes_canel_customer":
        try:
            info = func.info_offers_customer(chat_id)
            if info[4] == "open":
                func.yes_canel_customer2(chat_id)
                bot.send_message(
                    info[0], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=kb.menu
                )
                bot.send_message(
                    info[1], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=kb.menu
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "No_canel_customer":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "ok":
        try:
            info = func.info_offer_customer(chat_id)
            if info[0] == "success":
                bot.send_message(
                    chat_id,
                    text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä, –∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π? –ï—Å–ª–∏ –Ω–µ—Ç, –∏–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ —Å–æ–±–ª—é–¥–µ–Ω—ã, —Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä.",
                    reply_markup=kb.ok_choise,
                )
            else:
                bot.send_message(
                    chat_id, text="‚úÖ –í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å–¥–µ–ª–∫—É, –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –≤–µ–¥—ë—Ç—Å—è —Å–ø–æ—Ä."
                )
        except Exception as e:
            print(e)
            bot.send_message(chat_id, text=error)

    elif call.data == "ok_canel":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏, —á—Ç–æ —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–ª—É—á–µ–Ω.",
        )

    elif call.data == "ok_ok":
        try:
            info = func.info_offers_customer(chat_id)
            if info[4] == "success":
                info1 = func.profile(info[0])
                info2 = func.profile(info[1])
                func.ok(
                    chat_id,
                    info[0],
                    float(info[2]) * (1 - (procent / 100)),
                    info[3],
                    info1[2],
                    info1[4],
                    info2[4],
                    info1[1],
                    info2[1],
                )
                bot.send_message(
                    chat_id,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüìù –•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ?",
                    reply_markup=kb.add_review,
                )
                bot.send_message(
                    info[0],
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüí∞ –î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.\n\nüìù –°–µ–π—á–∞—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–∑—ã–≤, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
                    reply_markup=kb.cancel_wait,
                )
                # bot.send_message(
                #     chat_id_bot,
                #     text="‚úÖ C–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüí∞ –°—É–º–º–∞ - {sum_offer} —Ä—É–±–ª–µ–π\n\nüë§ –ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller_nick}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - @{customer_nick}".format(
                #         sum_offer=info[2], seller_nick=info1[5], customer_nick=info2[5]
                #     ),
                # )
            else:
                bot.send_message(
                    chat_id, text="–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å–¥–µ–ª–∫—É, –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –≤–µ–¥—ë—Ç—Å—è —Å–ø–æ—Ä."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "open_dispute":
        try:
            info = func.info_offers_customer(chat_id)
            if info[4] == "dont_open":
                bot.send_message(chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞!")
            else:
                if info[4] == "open":
                    bot.send_message(
                        chat_id,
                        text="‚õîÔ∏è –¢–æ–≤–∞—Ä –µ—â—ë –Ω–µ –±—ã–ª –≤–∞–º –ø–µ—Ä–µ–¥–∞–Ω. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü —Ö–æ—á–µ—Ç –≤–∞—Å –æ–±–º–∞–Ω—É—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–¥–µ–ª–∫—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                            nicknameadm
                        ),
                    )
                else:
                    if info[4] == "dispute":
                        bot.send_message(chat_id, text="‚õîÔ∏è –°–ø–æ—Ä —É–∂–µ –Ω–∞—á–∞—Ç.")
                    else:
                        info_c = func.profile(info[1])
                        info_s = func.profile(info[0])
                        func.dispute_customer(chat_id)
                        bot.send_message(
                            chat_id,
                            text="–°–ø–æ—Ä –Ω–∞—á–∞—Ç, –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–ø–æ–≤–µ—â—ë–Ω. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                nicknameadm
                            ),
                        )
                        bot.send_message(
                            info[0],
                            text="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª —Å–ø–æ—Ä –ø–æ –≤–∞—à–µ–º—É —Ç–æ–≤–∞—Ä—É, —Å–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                nicknameadm
                            ),
                        )
                        bot.send_message(
                            admin,
                            text="–ë—ã–ª –Ω–∞—á–∞—Ç —Å–ø–æ—Ä!\n\nID —Å–¥–µ–ª–∫–∏ - <b><code>{id}</code></b>\n–ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller}\n–ü–æ–∫—É–ø–∞—Ç–µ–ª—å(–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª —Å–ø–æ—Ä) - @{customer}".format(
                                id=info[3], seller=info_s[4], customer=info_c[4]
                            ),
                            parse_mode="HTML",
                        )
        except:
            bot.send_message(chat_id, text=error)

    elif call.data == "open_dispute_seller":
        try:
            info = func.info_offers_seller(chat_id)
            if info[4] == "dont_open":
                bot.send_message(chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞!")
            else:
                if info[4] == "open":
                    bot.send_message(
                        chat_id,
                        text="–¢–æ–≤–∞—Ä –µ—â—ë –Ω–µ –±—ã–ª –≤–∞–º –ø–µ—Ä–µ–¥–∞–Ω. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü —Ö–æ—á–µ—Ç –≤–∞–º —Å–∫–∞–º–Ω—É—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–¥–µ–ª–∫—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                            nicknameadm
                        ),
                    )
                else:
                    if info[4] == "dispute":
                        bot.send_message(chat_id, text="‚õîÔ∏è –°–ø–æ—Ä —É–∂–µ –Ω–∞—á–∞—Ç.")
                    else:
                        info_c = func.profile(info[1])
                        info_s = func.profile(info[0])
                        func.dispute_customer(chat_id)
                        bot.send_message(
                            chat_id,
                            text="–°–ø–æ—Ä –Ω–∞—á–∞—Ç, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–æ–≤–µ—â—ë–Ω. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                nicknameadm
                            ),
                        )
                        bot.send_message(
                            info[1],
                            text="–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–∞—á–∞–ª —Å–ø–æ—Ä, —Å–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                nicknameadm
                            ),
                        )
                        bot.send_message(
                            admin,
                            text="–ë—ã–ª –Ω–∞—á–∞—Ç —Å–ø–æ—Ä!\n\nID —Å–¥–µ–ª–∫–∏ - <b><code>{id}</code></b>\n–ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller}\n–ü–æ–∫—É–ø–∞—Ç–µ–ª—å(–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª —Å–ø–æ—Ä) - @{customer}".format(
                                id=info[3], seller=info_s[5], customer=info_c[5]
                            ),
                            parse_mode="HTML",
                        )
        except:
            bot.send_message(chat_id, text=error)

    elif call.data == "dispute_admin":
        msg = bot.send_message(
            chat_id, text='–í–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)'
        )
        bot.register_next_step_handler(msg, dispute_admin_func)

    elif call.data == "customer_true":
        msg = bot.send_message(
            chat_id,
            text='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—ë—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫',
        )
        bot.register_next_step_handler(msg, customer_true_func)

    elif call.data == "seller_true":
        msg = bot.send_message(
            chat_id,
            text='–ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∏—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
        )
        bot.register_next_step_handler(msg, seller_true_func)

    elif call.data == "no_true":
        msg = bot.send_message(
            chat_id,
            text='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—ë—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
        )
        bot.register_next_step_handler(msg, customer_true_func)

    elif call.data == "canel_open_offer":
        try:
            info = func.canel_open_offer(chat_id)
            if info[0] == "OK":
                bot.send_message(
                    chat_id,
                    text="üî• –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω–æ.",
                    reply_markup=kb.menu,
                )
                bot.send_message(
                    info[1],
                    text="üî• –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Ç–æ–∑–≤–∞–ª —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏.",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(
                    chat_id,
                    text="üî• –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø—Ä–æ–¥–∞–≤–µ—Ü –µ–≥–æ —É–∂–µ –ø—Ä–∏–Ω—è–ª.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "canel_open_offer_seller":
        try:
            info = func.canel_open_offer_seller(chat_id)
            if info[0] == "OK":
                bot.send_message(
                    chat_id,
                    text="üî• –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω–æ.",
                    reply_markup=kb.menu,
                )
                bot.send_message(
                    info[1],
                    text="üî• –ü—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–æ–∑–≤–∞–ª —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏.",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(
                    chat_id,
                    text="üî• –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –µ–≥–æ —É–∂–µ –ø—Ä–∏–Ω—è–ª.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "reviews":
        try:
            info1 = func.info_offers_customer(chat_id)
            if info1 == None:
                info1 = func.info_offers_seller(chat_id)
                info = func.reviews(info1[1])
                if len(info) > 0:
                    bot.send_message(chat_id=chat_id, text=info)
                elif len(info) == 0:
                    bot.send_message(chat_id=chat_id, text="‚õîÔ∏è –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
            else:
                info = func.reviews(info1[0])
                if len(info) > 0:
                    bot.send_message(chat_id=chat_id, text=info)
                elif len(info) == 0:
                    bot.send_message(chat_id=chat_id, text="‚õîÔ∏è –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    if call.data == "add_review":
        try:
            info = func.info_offer_customer(chat_id)
            if info[0] == "review":
                msg = bot.send_message(
                    chat_id,
                    text='üî• –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ —Å–¥–µ–ª–∫–µ, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã—à–ª–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
                )
                bot.register_next_step_handler(msg, add_review)
            else:
                bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Å–¥–µ–ª–∫—É.",
                    reply_markup=kb.menu,
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "up_login":
        try:
            info = func.up_login(call.message.chat.username, call.message.chat.id)
            if info == None:
                bot.send_message(chat_id, text="–í–∞—à –ª–æ–≥–∏–Ω –æ–±–Ω–æ–≤–ª—ë–Ω!")
            else:
                bot.send_message(
                    chat_id,
                    text="–õ–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏–ª–∏ –≤—ã –µ–≥–æ —É–∂–µ –∑–∞–Ω—è–ª–∏!",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )

    elif call.data == "no_review":
        try:
            info = func.info_offers_customer(chat_id)
            bot.send_message(
                info[0],
                text="‚ùÑÔ∏è –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç—ã–∑–≤.",
                reply_markup=kb.menu,
            )
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚ùÑÔ∏è –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
            )
            bot.send_message(chat_id, text=enable_keyboard, reply_markup=kb.menu)
            func.close_offer(chat_id)
        except:
            bot.send_message(chat_id, text=error)

    elif call.data == "cancel_wait":
        try:
            info = func.info_offers_seller(chat_id)
            if info[4] == "review":
                func.close_offer_seller(chat_id)
                bot.send_message(
                    chat_id,
                    text="‚ùÑÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.",
                    reply_markup=kb.menu,
                )
                bot.send_message(
                    info[1],
                    "–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª –æ–∂–∏–¥–∞—Ç—å –æ—Ç–∑—ã–≤–∞. –°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä–µ—à–Ω–∞",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(chat_id, error)
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=error
            )
    elif call.data == "go_back":
        bot.edit_message_text(
            message_id=call.message.message_id,
            chat_id=chat_id,
            text="–í—ã–≤–µ—Å—Ç–∏ –≤–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≥–¥–µ –≤—ã...",
        )
        bot.edit_message_reply_markup(
            chat_id=chat_id,
            message_id=call.message.message_id,
            inline_message_id=call.message.message_id,
            reply_markup=kb.cors,
        )


def getAmount(message):
    amount = message.text
    api_msg = requests.get(
        url=api_link + f"createInvoice?asset=USDT&amount={amount}", headers=header
    ).json()["result"]
    bot.send_message(
        message.chat.id,
        f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: \n\n ID: {api_msg['invoice_id']} \n –í–∞–ª—é—Ç–∞: {api_msg['asset']} \n –°—É–º–º–∞: {api_msg['amount']} \n",
        reply_markup=func.getUrlMarkup(api_msg["pay_url"]),
    )


def add_review(message):
    try:
        if message.text.startswith("-"):
            info = func.info_offers_customer(message.chat.id)
            bot.send_message(
                message.chat.id, text=canel_operation, reply_markup=kb.menu
            )
            func.close_offer(message.chat.id)
        else:
            info = func.info_offers_customer(message.chat.id)
            func.add_review(info[0], info[2], message.chat.id, message.text)
            bot.send_message(
                message.chat.id, text="üìù –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω.", reply_markup=kb.menu
            )
            bot.send_message(
                info[0],
                text="üìù –û –≤–∞—Å –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤!\n\n" + message.text,
                reply_markup=kb.menu,
            )
            func.close_offer(message.chat.id)
    except:
        bot.answer_callback_query(
            callback_query_id=message.id, show_alert=True, text=error
        )


def customer_true_func(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            if message.text.isdigit():
                info = func.dispute_info(message.text)
                info1 = func.profile(info[1])
                func.customer_true(message.text, info[1], info1[2], info[2])
                bot.send_message(message.chat.id, text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–Ω–µ—Å–µ–Ω.")
                bot.send_message(
                    info[1],
                    text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É!",
                    reply_markup=kb.menu,
                )
                bot.send_message(
                    info[0],
                    text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –≤ –ø–æ–ª—å–∑—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è!",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(message.chat.id, text="‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ ID —Å–¥–µ–ª–∫–∏ –±—É–∫–≤–∞–º–∏!")
    except:
        bot.send_message(message.chat.id, text=error)


def seller_true_func(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            if message.text.isdigit():
                info = func.dispute_info(message.text)
                info_s = func.profile(info[0])
                info_c = func.profile(info[1])
                func.seller_true(
                    message.text, info[0], info[1], info_s[2], info_c[2], info[2]
                )
                bot.send_message(message.chat.id, text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–Ω–µ—Å–µ–Ω.")
                bot.send_message(
                    info[1],
                    text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –≤ –ø–æ–ª—å–∑—É –ø—Ä–æ–¥–∞–≤—Ü–∞!",
                    reply_markup=kb.menu,
                )
                bot.send_message(
                    info[0],
                    text="‚úÖ –í–µ—Ä–¥–∏–∫—Ç –±—ã–ª –≤—ã–Ω–µ—Å–µ–Ω –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É!",
                    reply_markup=kb.menu,
                )
            else:
                bot.send_message(message.chat.id, text="‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ ID —Å–¥–µ–ª–∫–∏ –±—É–∫–≤–∞–º–∏!")
    except:
        bot.send_message(message.chat.id, text=error)


def dispute_admin_func(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            if message.text.isdigit():
                info = func.dispute_info(message.text)
                if info == None:
                    bot.send_message(message.chat.id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!")
                else:
                    info_s = func.profile(info[0])
                    info_c = func.profile(info[1])
                    bot.send_message(
                        message.chat.id,
                        text="üßæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–µ ‚Ññ{id}\n\n‚ùï –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - ID{customer}(@{customer_nick})\n‚ùï –ü—Ä–æ–¥–∞–≤–µ—Ü - ID{seller}(@{seller_nick})\nüí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ - {sum_offer} USDT\nüìä –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}\n\n–ö—Ç–æ –ø—Ä–∞–≤ –≤ –¥–∞–Ω–Ω–æ–º —Å–ø–æ—Ä–µ?".format(
                            id=info[3],
                            customer=info[1],
                            seller=info[0],
                            status=info[4],
                            sum_offer=info[2],
                            customer_nick=info_c[4],
                            seller_nick=info_s[4],
                        ),
                        reply_markup=kb.choise_admin,
                    )
            else:
                bot.send_message(message.chat.id, text="‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ ID —Å–¥–µ–ª–∫–∏ –±—É–∫–≤–∞–º–∏!")
    except:
        bot.send_message(message.chat.id, text=error)


def ban1(message):
    ban = message.text
    try:
        int(ban)
        func.ban(ban)
        bot.send_message(message.chat.id, text="‚úÖ –ß–µ–ª–æ–≤–µ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω!")
    except:
        bot.send_message(message.chat.id, text=canel_operation)


def unban1(message):
    try:
        unban = message.text
        int(unban)
        func.unban(unban)
        bot.send_message(message.chat.id, text="‚úÖ –ß–µ–ª–æ–≤–µ–∫ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω!")
    except:
        bot.send_message(message.chat.id, text=canel_operation)


def give_balance1(message):
    balance = func.GiveBalance(message.text)
    balance_dict[message.chat.id] = balance
    msg = bot.send_message(
        message.chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
    )
    bot.register_next_step_handler(msg, give_balance2)


def give_balance2(message):
    balance = balance_dict[message.chat.id]
    balance.balance = message.text
    balance = balance_dict[message.chat.id]
    func.edit_balance(balance)
    bot.send_message(message.chat.id, text="‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω")


def search_seller(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            info1 = func.profile(message.chat.id)
            if (
                str(message.text) == message.from_user.username
                or info1[4] != message.from_user.username
            ):
                bot.send_message(
                    message.chat.id,
                    text="‚õîÔ∏è –° —Å–∞–º–∏–º —Å–æ–±–æ–π –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, –∏–ª–∏ –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∏–∫. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫, —Ç–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–≥–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ.",
                )
            else:
                info = func.search(message.text)
                if info == None:
                    bot.send_message(
                        message.chat.id,
                        text="‚õîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ–Ω —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º!",
                    )
                else:
                    info1 = func.check_deal(message.text)
                    if info1 == None:
                        func.deal(message.chat.id, info[0])
                        bot.send_message(
                            message.chat.id,
                            "üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n‚ùï Id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nickname}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–æ–º!".format(
                                id=info[0], nickname=info[4], offers=info[1]
                            ),
                            reply_markup=kb.sentence_seller,
                            parse_mode="HTML",
                        )
                        bot.send_message(
                            message.chat.id,
                            text=disable_keyboard,
                            reply_markup=types.ReplyKeyboardRemove(),
                        )
                    else:
                        bot.send_message(
                            message.chat.id,
                            text="‚õîÔ∏è –ß–µ–ª–æ–≤–µ–∫ —Å–µ–π—á–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–¥–µ–ª–∫—É, –∏ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Ç–æ—Ä—É—é.",
                        )
                        bot.send_message(
                            info[0],
                            "‚õîÔ∏è –° –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É, –æ–¥–Ω–∞–∫–æ —Å–∏—Å—Ç–µ–º–∞ –µ—ë –æ—Ç–∫–ª–æ–Ω–∏–ª–∞, –≤–µ–¥—å –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç!",
                        )
    except Exception as e:
        print(e)
        bot.send_message(message.chat.id, text=error)


def search_customer(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            info1 = func.profile(message.chat.id)
            if (
                str(message.text) == message.from_user.username
                or info1[4] != message.from_user.username
            ):
                bot.send_message(
                    message.chat.id,
                    text="‚õîÔ∏è –° —Å–∞–º–∏–º —Å–æ–±–æ–π –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, –∏–ª–∏ –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∏–∫. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫, —Ç–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–≥–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ.",
                )
            else:
                info = func.search(message.text)
                if info == None:
                    bot.send_message(
                        message.chat.id,
                        text="‚õîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ–Ω —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º!",
                    )
                else:
                    result = func.check_deal(message.text)
                    if result == None:
                        func.deal(info[0], message.chat.id)
                        bot.send_message(
                            message.chat.id,
                            "üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n‚ùï Id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nickname}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî•–í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º!".format(
                                id=info[0], nickname=info[4], offers=info[1]
                            ),
                            reply_markup=kb.sentence,
                            parse_mode="HTML",
                        )
                        bot.send_message(
                            message.chat.id,
                            text=disable_keyboard,
                            reply_markup=types.ReplyKeyboardRemove(),
                        )
                    else:
                        bot.send_message(
                            message.chat.id,
                            text="‚õîÔ∏è –ß–µ–ª–æ–≤–µ–∫ —Å–µ–π—á–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–¥–µ–ª–∫—É, –∏ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Ç–æ—Ä—É—é.",
                        )
                        bot.send_message(
                            info[0],
                            "‚õîÔ∏è –° –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É, –æ–¥–Ω–∞–∫–æ —Å–∏—Å—Ç–µ–º–∞ –µ—ë –æ—Ç–∫–ª–æ–Ω–∏–ª–∞, –≤–µ–¥—å –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç!",
                        )
    except Exception as e:
        print(e, " search customer")
        bot.send_message(message.chat.id, text=error)


def output(message):
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text="‚õîÔ∏è –ù–µ –≤ –º–æ—é —Å–º–µ–Ω—É...")
        else:
            output_amount = float(message.text)
            if output_amount * func.getExchangeRate() < 1:
                msg = bot.send_message(
                    message.chat.id,
                    f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 1 USD \n –ê–∫—Ç—É–ª—å–Ω—ã–π –∫—É—Ä—Å USDT/USD = {func.getExchangeRate()}",
                )
                bot.register_next_step_handler(msg, output)
            else:
                info = func.profile(message.chat.id)
                if float(info[2]) < output_amount:
                    msg = bot.send_message(
                        message.chat.id,
                        "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                    )
                    bot.register_next_step_handler(msg, output)
                else:
                    try:
                        transfer = requests.get(
                            api_link
                            + f"transfer?user_id={message.chat.id}&spend_id={func.generate_random_string(16)}&asset=USDT&amount={output_amount}",
                            headers=header,
                        ).json()["result"]
                        func.output(message.chat.id, output_amount)
                        bot.send_message(
                            message.chat.id,
                            f"–£—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω–æ {transfer['amount']} USDT.",
                        )
                    except Exception as e:
                        print(e, " transfer error")
                        msg = bot.send_message(
                            message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                        )
                        bot.register_next_step_handler(msg, output)
    except Exception as e:
        print(e, " output error")
        bot.send_message(message.chat.id, text=error)


def message1(message):
    text = message.text
    if message.text.startswith("-"):
        bot.send_message(message.chat.id, text=canel_operation)
    else:
        info = func.admin_message(text)
        bot.send_message(message.chat.id, text="‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞!")
        for i in range(len(info)):
            try:
                time.sleep(1)
                bot.send_message(info[i][0], str(text))
            except:
                pass
        bot.send_message(message.chat.id, text="‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def price(message):
    money = message.text
    info = func.info_offers_seller(message.chat.id)
    try:
        if message.text.startswith("-"):
            bot.send_message(message.chat.id, text=canel_operation)
        else:
            info_c = func.profile(info[1])
            info_s = func.profile(info[0])
            int(money)
            status = info[4]
            func.edit_price(money, message.chat.id)
            info = func.info_offers_seller(message.chat.id)
            bot.send_message(
                message.chat.id,
                text="üí• –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞\n\nüí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}\n\nüí≥ –°—É–º–º–∞ - {sum} USDT\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[4],
                    seller_id=info_s[0],
                    seller_nick=info_s[4],
                    sum=info[2],
                    status=status,
                ),
                reply_markup=kb.seller_panel,
            )
            bot.send_message(
                info[1],
                text="üí• –ë—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏!\n\nüí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}\n\nüí≥ –°—É–º–º–∞ - {sum} USDT\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[4],
                    seller_id=info_s[0],
                    seller_nick=info_s[4],
                    sum=info[2],
                    status=status,
                ),
                reply_markup=kb.customer_panel,
            )
    except:
        bot.send_message(message.chat.id, text=error)


print("zapuskaemsya")
# –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
if __name__ == "__main__":
    bot.polling(none_stop=True)
